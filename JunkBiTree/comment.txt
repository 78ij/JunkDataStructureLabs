printf("/*\n");
printf("* Function Name: InitBiTree\n");
printf("* Parameter: BiTree &T\n");
printf("* Return: Status(int)\n");
printf("* Use: initialize the binary tree\n");
printf("please enter the id of the tree:");
scanf("%d", &tree_index);

printf("/*\n");
printf("* Function Name: DestroyBiTree\n");
printf("* Parameter: BiTree &T\n");
printf("* Return: Status(int)\n");
printf("* Use: destroy the binary tree\n");
printf("please enter the id of the tree:");
scanf("%d", &tree_index);

printf("/*\n");
printf("* Function Name: CreateBiTree\n");
printf("* Parameter: BiTree &T, int length, int *preorder, int *inorder, ElemType * data\n");
printf("* Return: Status(int)\n");
printf("* Use: create the tree using the defination data\n");
printf("please enter the id of the tree:");
scanf("%d", &tree_index);

printf("/*\n");
printf("* Function Name: ClearBiTree\n");
printf("* Parameter: BiTree &T\n");
printf("* Return: Status(int)\n");
printf("* Use: clear the BiTree\n");
printf("please enter the id of the tree:");
scanf("%d", &tree_index);

printf("/*\n");
printf("* Function Name: BiTreeEmpty\n");
printf("* Parameter: const BiTree &T\n");
printf("* Return: bool\n");
printf("* Use: check whether the tree is empty\n");
printf("please enter the id of the tree:");
scanf("%d", &tree_index);

printf("/*\n");
printf("* Function Name: BiTreeDepth\n");
printf("* Parameter: const BiTree &T\n");
printf("* Return: int\n");
printf("* Use: calculate the depth of the tree.\n");
printf("please enter the id of the tree:");
scanf("%d", &tree_index);

printf("/*\n");
printf("* Function Name: Root\n");
printf("* Parameter: const BiTree &T\n");
printf("* Return: BiTreeNode *\n");
printf("* Use: return the root node of the tree.\n");
printf("please enter the id of the tree:");
scanf("%d", &tree_index);

printf("/*\n");
printf("* Function Name: Value\n");
printf("* Parameter: const BiTree &T, int index,ElemType &value\n");
printf("* Return: status\n");
printf("* Use: return the value of the node\n");
printf("please enter the id of the tree:");
scanf("%d", &tree_index);

printf("/*\n");
printf("* Function Name: Assign\n");
printf("* Parameter: BiTree &T, int index, ElemType &value\n");
printf("* Return: status\n");
printf("* Use: assign given value to given node\n");
printf("please enter the id of the tree:");
scanf("%d", &tree_index);

printf("/*\n");
printf("* Function Name: Parent\n");
printf("* Parameter: const BiTree &T, int index\n");
printf("* Return: BiTreeNode *\n");
printf("* Use: return the parent of the given node \n");
printf("please enter the id of the tree:");
scanf("%d", &tree_index);

printf("/*\n");
printf("* Function Name: LeftChild\n");
printf("* Parameter: const BiTree &T, int index\n");
printf("* Return: BiTreeNode *\n");
printf("* Use: return the LeftChild of the given node\n");
printf("please enter the id of the tree:");
scanf("%d", &tree_index);

printf("/*\n");
printf("* Function Name: RightChild\n");
printf("* Parameter: const BiTree &T, int index\n");
printf("* Return: BiTreeNode *\n");
printf("* Use: return the RightChild of the given node\n");
printf("please enter the id of the tree:");
scanf("%d", &tree_index);

printf("/*\n");
printf("* Function Name: LeftSibling\n");
printf("* Parameter: const BiTree &T, int index\n");
printf("* Return: BiTreeNode *\n");
printf("* Use: return the LeftSibling of the given node\n");
printf("please enter the id of the tree:");
scanf("%d", &tree_index);

printf("/*\n");
printf("* Function Name: RightSibling\n");
printf("* Parameter: const BiTree &T, int index\n");
printf("* Return: BiTreeNode *\n");
printf("* Use: return the RightSibling of the given node\n");
printf("please enter the id of the tree:");
scanf("%d", &tree_index);

printf("/*\n");
printf("* Function Name: InsertChild\n");
printf("* Parameter: BiTree &T, int index, int LR, BiTree &c\n");
printf("* Return: status\n");
printf("* Use: Insert the BiTree to the given node \n");
printf("please enter the id of the tree:");
scanf("%d", &tree_index);

printf("/*\n");
printf("* Function Name: DeleteChild\n");
printf("* Parameter: BiTree &T, int index, int LR\n");
printf("* Return: status\n");
printf("* Use: delete the child tree of the given node\n");
printf("please enter the id of the tree:");
scanf("%d", &tree_index);

printf("/*\n");
printf("* Function Name: PreOrderTraverse\n");
printf("* Parameter:const BiTree &T\n");
printf("* Return: Status(int)\n");
printf("* Use: pre order traverse the tree.\n");
printf("please enter the id of the tree:");
scanf("%d", &tree_index);

printf("/*\n");
printf("* Function Name: InOrderTraverse\n");
printf("* Parameter:const BiTree &T\n");
printf("* Return: Status(int)\n");
printf("* Use: in order traverse the tree.\n");
printf("please enter the id of the tree:");
scanf("%d", &tree_index);

printf("/*\n");
printf("* Function Name: PostOrderTraverse\n");
printf("* Parameter:const BiTree &T\n");
printf("* Return: Status(int)\n");
printf("* Use: post order traverse the tree.\n");
printf("please enter the id of the tree:");
scanf("%d", &tree_index);

printf("/*\n");
printf("* Function Name: LevelOrderTraverse\n");
printf("* Parameter:const BiTree &T\n");
printf("* Return: Status(int)\n");
printf("* Use: level order traverse the tree.\n");
printf("please enter the id of the tree:");
scanf("%d", &tree_index);

